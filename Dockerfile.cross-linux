FROM ubuntu:24.04

RUN apt-get update -qq && \
    DEBIAN_FRONTEND="noninteractive" apt-get install -qqy --no-install-recommends \
    git wget bzip2 file unzip libtool pkg-config cmake build-essential \
    automake nasm gettext autopoint vim-tiny python3 \
    ninja-build ca-certificates curl less zip && \
    apt-get clean -y && \
    rm -rf /var/lib/apt/lists/*

RUN apt-get update -qq && \
    DEBIAN_FRONTEND="noninteractive" apt-get install -qqy --no-install-recommends \
    g++-aarch64-linux-gnu && \
    apt-get clean -y && \
    rm -rf /var/lib/apt/lists/*

RUN git config --global user.name "LLVM MinGW" && \
    git config --global user.email root@localhost

WORKDIR /build

ENV TOOLCHAIN_PREFIX=/opt/llvm-mingw

ARG TOOLCHAIN_ARCHS="i686 x86_64 armv7 aarch64"

ARG DEFAULT_CRT=ucrt

ARG CFGUARD_ARGS=--enable-cfguard

COPY llvm-mingw.tar.xz ./
RUN mkdir -p /opt && \
    tar -Jxvf llvm-mingw.tar.xz -C /opt && \
    rm llvm-mingw.tar.xz && \
    cd /opt && \
    mv llvm-mingw* llvm-mingw-native

COPY llvm-stage1.tar.xz ./
RUN mkdir -p /opt && \
    tar -Jxvf llvm-stage1.tar.xz -C /opt && \
    rm llvm-stage1.tar.xz

ENV PATH=/opt/llvm/bin:$PATH

# Build everything that uses the llvm monorepo. We need to build the mingw runtime before the compiler-rt/libunwind/libcxxabi/libcxx runtimes.
# TODO: Skip unused scripts here.
COPY build-all.sh build-llvm.sh build-lldb-mi.sh strip-llvm.sh install-wrappers.sh build-mingw-w64.sh build-mingw-w64-tools.sh build-compiler-rt.sh build-libcxx.sh build-mingw-w64-libraries.sh build-openmp.sh prepare-cross-toolchain-unix.sh ./
COPY wrappers/*.sh wrappers/*.c wrappers/*.h wrappers/*.cfg ./wrappers/
RUN ./build-all.sh $TOOLCHAIN_PREFIX --no-runtimes --host=aarch64-linux-gnu --stage2 && \
    ./prepare-cross-toolchain-unix.sh /opt/llvm-mingw-native $TOOLCHAIN_PREFIX && \
    rm -rf /build/*
