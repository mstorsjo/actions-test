From 46025a66409cc8903e0166dae6ea62b0c29f30b3 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Martin=20Storsj=C3=B6?= <martin@martin.st>
Date: Wed, 5 Apr 2023 14:52:30 +0300
Subject: [PATCH 17/28] [libcxxabi] [test] Use the correct printf formats for
 printing pointers

Don't cast the pointers to long, as that's not large enough for
pointers on 64 bit Windows.

Differential Revision: https://reviews.llvm.org/D147640
---
 libcxxabi/test/test_fallback_malloc.pass.cpp | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/libcxxabi/test/test_fallback_malloc.pass.cpp b/libcxxabi/test/test_fallback_malloc.pass.cpp
index e7d22a57d2bc..ff6ef60710c5 100644
--- a/libcxxabi/test/test_fallback_malloc.pass.cpp
+++ b/libcxxabi/test/test_fallback_malloc.pass.cpp
@@ -9,6 +9,7 @@
 #include <cstdio>
 #include <deque>
 #include <cassert>
+#include <inttypes.h>
 
 #include <__threading_support>
 
@@ -192,11 +193,11 @@ int main () {
     print_free_list ();
 
     char *p = (char *) fallback_malloc ( 1024 );    // too big!
-    std::printf("fallback_malloc ( 1024 ) --> %lu\n", (unsigned long ) p);
+    std::printf("fallback_malloc ( 1024 ) --> %" PRIuPTR"\n", (uintptr_t) p);
     print_free_list ();
 
     p = (char *) fallback_malloc ( 32 );
-    std::printf("fallback_malloc ( 32 ) --> %lu\n", (unsigned long) (p - heap));
+    std::printf("fallback_malloc ( 32 ) --> %" PRIuPTR"\n", (uintptr_t) (p - heap));
     if ( !is_fallback_ptr ( p ))
         std::printf("### p is not a fallback pointer!!\n");
 
-- 
2.34.1

