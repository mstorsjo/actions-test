From 53ef3a15115c5ecda044e935cfce388c2d6f0ae0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Martin=20Storsj=C3=B6?= <martin@martin.st>
Date: Fri, 31 Mar 2023 11:35:15 +0300
Subject: [PATCH 10/22] [compiler-rt] Fix the scalbn tests on mingw on
 arm/aarch64

---
 compiler-rt/test/builtins/Unit/compiler_rt_scalbn_test.c  | 8 +++++---
 compiler-rt/test/builtins/Unit/compiler_rt_scalbnf_test.c | 8 +++++---
 2 files changed, 10 insertions(+), 6 deletions(-)

diff --git a/compiler-rt/test/builtins/Unit/compiler_rt_scalbn_test.c b/compiler-rt/test/builtins/Unit/compiler_rt_scalbn_test.c
index e1cda63246fd..71d38d84ca61 100644
--- a/compiler-rt/test/builtins/Unit/compiler_rt_scalbn_test.c
+++ b/compiler-rt/test/builtins/Unit/compiler_rt_scalbn_test.c
@@ -61,9 +61,11 @@ int main() {
   // should have the same rounding behavior as double-precision multiplication.
 #if (defined(__arm__) || defined(__aarch64__)) && defined(__ARM_FP) || \
     defined(__i386__) || defined(__x86_64__)
-// Skip these tests for MSVC because its scalbn function always behaves as if
-// the default rounding mode is set (FE_TONEAREST).
-#ifndef _MSC_VER
+// Skip these tests for Windows because the UCRT scalbn function always
+// behaves as if the default rounding mode is set (FE_TONEAREST).
+// MinGW provides its own scalbn function on x86, but for arm/aarch64 on UCRT,
+// it uses the UCRT provided one.
+#if !defined(_MSC_VER) && !(defined(__MINGW32__) && (defined(__arm__) || defined(__aarch64__)))
   fesetround(FE_UPWARD);
   if (iterate_cases("FE_UPWARD")) return 1;
 
diff --git a/compiler-rt/test/builtins/Unit/compiler_rt_scalbnf_test.c b/compiler-rt/test/builtins/Unit/compiler_rt_scalbnf_test.c
index dfa34232604f..b6c7f49f6410 100644
--- a/compiler-rt/test/builtins/Unit/compiler_rt_scalbnf_test.c
+++ b/compiler-rt/test/builtins/Unit/compiler_rt_scalbnf_test.c
@@ -60,9 +60,11 @@ int main() {
   // should have the same rounding behavior as single-precision multiplication.
 #if (defined(__arm__) || defined(__aarch64__)) && defined(__ARM_FP) || \
     defined(__i386__) || defined(__x86_64__)
-// Skip these tests for MSVC because its scalbnf function always behaves as if
-// the default rounding mode is set (FE_TONEAREST).
-#ifndef _MSC_VER
+// Skip these tests for Windows because the UCRT scalbn function always
+// behaves as if the default rounding mode is set (FE_TONEAREST).
+// MinGW provides its own scalbn function on x86, but for arm/aarch64 on UCRT,
+// it uses the UCRT provided one.
+#if !defined(_MSC_VER) && !(defined(__MINGW32__) && (defined(__arm__) || defined(__aarch64__)))
   fesetround(FE_UPWARD);
   if (iterate_cases("FE_UPWARD")) return 1;
 
-- 
2.34.1

