From 9b78efef70ea1843e5049c67c66cca4ac6cf470c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Martin=20Storsj=C3=B6?= <martin@martin.st>
Date: Wed, 5 Apr 2023 10:57:21 +0300
Subject: [PATCH 14/28] [libunwind] [SEH] Break on errors from
 __unw_get_proc_info in unwind_phase2_forced

Stepping with the SEH implementation of __unw_step (which uses
RtlVirtualUnwind) doesn't signal failures to step when reaching
the end of the stack. Therefore, the only way the stepping can
end is when __unw_get_proc_info no longer can resolve any
unwind info for the given address.

The associated log message is already hinting at _URC_END_OF_STACK
(which is what we set after breaking out from the loop).

The debug log messages have printed _URC_END_OF_STACK for this case
since the first public commit of libunwind in 2013. In the case of
UnwindLevel1.c, it used to return _URC_FATAL_PHASE1_ERROR, but
it was changed in 2014 in 97080e0c5eb477ae771d1dc2b034d3a6787a47e5
at the addition of ARM EHABI support to return
_URC_FATAL_PHASE2_ERROR instead.
---
 libunwind/src/Unwind-seh.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/libunwind/src/Unwind-seh.cpp b/libunwind/src/Unwind-seh.cpp
index 150ba6453a22..e4529d9b2b56 100644
--- a/libunwind/src/Unwind-seh.cpp
+++ b/libunwind/src/Unwind-seh.cpp
@@ -242,7 +242,7 @@ unwind_phase2_forced(unw_context_t *uc,
       _LIBUNWIND_TRACE_UNWINDING("unwind_phase2_forced(ex_ojb=%p): __unw_get_proc_info "
                                  "failed => _URC_END_OF_STACK",
                                  (void *)exception_object);
-      return _URC_FATAL_PHASE2_ERROR;
+      break;
     }
 
 #ifndef NDEBUG
-- 
2.34.1

