From 873d2e8a90ff1195cb1f200b5ca96c5ff734f973 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Martin=20Storsj=C3=B6?= <martin@martin.st>
Date: Wed, 12 Apr 2023 09:12:28 +0000
Subject: [PATCH 1/2] [compiler-rt] [test] [ubsan] Mark failing tests as
 unsupported for mingw configs

All of these are already unsupported for MSVC style configs. For
some cases, simplify the regex to match any windows triple, while
for others, mention windows-msvc and windows-gnu specifically,
if they are separate cases that happen to fail for different reasons.

-fsanitize=function is unsupported both in mingw and MSVC modes.

The vptr tests expect to get demangled C++ type info names, but
Itanium C++ typenames don't get demangled by ubsan on Windows.

The test that tries to build a .so doesn't work as such on
Windows.

While mingw toolchains do support weak symbols, the relevant
sanitizer symbols aren't made weak on Windows.

Differential Revision: https://reviews.llvm.org/D148163
---
 compiler-rt/test/ubsan/TestCases/Misc/monitor.cpp             | 2 +-
 .../test/ubsan/TestCases/TypeCheck/Function/function.cpp      | 2 +-
 .../ubsan/TestCases/TypeCheck/vptr-non-unique-typeinfo.cpp    | 2 +-
 .../test/ubsan/TestCases/TypeCheck/vptr-virtual-base.cpp      | 2 ++
 compiler-rt/test/ubsan/TestCases/TypeCheck/vptr.cpp           | 4 ++++
 5 files changed, 9 insertions(+), 3 deletions(-)

diff --git a/compiler-rt/test/ubsan/TestCases/Misc/monitor.cpp b/compiler-rt/test/ubsan/TestCases/Misc/monitor.cpp
index 0a705cc4c1c6..d3de725773d9 100644
--- a/compiler-rt/test/ubsan/TestCases/Misc/monitor.cpp
+++ b/compiler-rt/test/ubsan/TestCases/Misc/monitor.cpp
@@ -4,7 +4,7 @@
 // __ubsan_on_report is not defined as weak. Redefining it here isn't supported
 // on Windows.
 //
-// UNSUPPORTED: target={{.*windows-msvc.*}}
+// UNSUPPORTED: target={{.*windows.*}}
 // Linkage issue
 // XFAIL: target={{.*openbsd.*}}
 
diff --git a/compiler-rt/test/ubsan/TestCases/TypeCheck/Function/function.cpp b/compiler-rt/test/ubsan/TestCases/TypeCheck/Function/function.cpp
index 06eb796a46bb..567db7a872cc 100644
--- a/compiler-rt/test/ubsan/TestCases/TypeCheck/Function/function.cpp
+++ b/compiler-rt/test/ubsan/TestCases/TypeCheck/Function/function.cpp
@@ -4,7 +4,7 @@
 // RUN: %run %t 2>&1 | FileCheck %s --check-prefix=CHECK $(%run %t-unique UNIQUE)
 // Verify that we can disable symbolization if needed:
 // RUN: %env_ubsan_opts=symbolize=0 %run %t 2>&1 | FileCheck %s --check-prefix=NOSYM $(%run %t-unique NOSYM-UNIQUE)
-// XFAIL: target={{.*windows-msvc.*}}
+// XFAIL: target={{.*windows.*}}
 // Unsupported function flag
 // UNSUPPORTED: target={{.*openbsd.*}}
 
diff --git a/compiler-rt/test/ubsan/TestCases/TypeCheck/vptr-non-unique-typeinfo.cpp b/compiler-rt/test/ubsan/TestCases/TypeCheck/vptr-non-unique-typeinfo.cpp
index 6686415a222c..604d0d6232bf 100644
--- a/compiler-rt/test/ubsan/TestCases/TypeCheck/vptr-non-unique-typeinfo.cpp
+++ b/compiler-rt/test/ubsan/TestCases/TypeCheck/vptr-non-unique-typeinfo.cpp
@@ -3,7 +3,7 @@
 // RUN: %run %t
 //
 // REQUIRES: cxxabi
-// UNSUPPORTED: target={{.*windows-msvc.*}}
+// UNSUPPORTED: target={{.*windows.*}}
 
 struct X {
   virtual ~X() {}
diff --git a/compiler-rt/test/ubsan/TestCases/TypeCheck/vptr-virtual-base.cpp b/compiler-rt/test/ubsan/TestCases/TypeCheck/vptr-virtual-base.cpp
index 80a96cb042ae..9d44f0230e92 100644
--- a/compiler-rt/test/ubsan/TestCases/TypeCheck/vptr-virtual-base.cpp
+++ b/compiler-rt/test/ubsan/TestCases/TypeCheck/vptr-virtual-base.cpp
@@ -6,6 +6,8 @@
 // UNSUPPORTED: target={{.*windows-msvc.*}}
 // Nested crash reported
 // UNSUPPORTED: target={{.*freebsd.*}}
+// FIXME: Itanium demangling isn't done for the type names on MinGW targets.
+// XFAIL: target={{.*windows-gnu.*}}
 
 struct S { virtual int f() { return 0; } };
 struct T : virtual S {};
diff --git a/compiler-rt/test/ubsan/TestCases/TypeCheck/vptr.cpp b/compiler-rt/test/ubsan/TestCases/TypeCheck/vptr.cpp
index 70c93440a0e0..2d0e48cd84f3 100644
--- a/compiler-rt/test/ubsan/TestCases/TypeCheck/vptr.cpp
+++ b/compiler-rt/test/ubsan/TestCases/TypeCheck/vptr.cpp
@@ -44,6 +44,10 @@
 // UNSUPPORTED: target={{.*openbsd.*}}
 // Compilation error
 // UNSUPPORTED: target={{.*freebsd.*}}
+// FIXME: For MinGW targets, the vptr tests do generally work, but Itanium
+// demangling isn't done for the type names. The "(echo ..." line fails to
+// be handled by the shell.
+// XFAIL: target={{.*windows-gnu.*}}
 #include <new>
 #include <typeinfo>
 #include <assert.h>
-- 
2.34.1

