From 8486d10a00da7a30790cc835d2be7f36fbec5582 Mon Sep 17 00:00:00 2001
From: Billy Laws <blaws05@gmail.com>
Date: Sat, 16 Sep 2023 00:03:00 +0100
Subject: [PATCH 22/29] configure: ARM64EC build support

---
 mingw-w64-crt/Makefile.am  | 15 +++++++++++++--
 mingw-w64-crt/configure.ac | 12 ++++++++++--
 2 files changed, 23 insertions(+), 4 deletions(-)

diff --git a/mingw-w64-crt/Makefile.am b/mingw-w64-crt/Makefile.am
index 71960488f..5acebdf9b 100644
--- a/mingw-w64-crt/Makefile.am
+++ b/mingw-w64-crt/Makefile.am
@@ -27,13 +27,18 @@ CPPFLAGS32=-m32 -masm=att
 CPPFLAGS64=-m64 -masm=att
 AM_DLLTOOLFLAGS=-k --as=$(AS) --output-lib $@
 DLLTOOLFLAGSARM32=-m arm
-DLLTOOLFLAGSARM64=-m arm64
+if ARM64EC
+    DLLTOOLFLAGSARM64=-m arm64ec
+else
+    DLLTOOLFLAGSARM64=-m arm64
+endif
 DLLTOOLFLAGS32=--as-flags=--32 -m i386
 DLLTOOLFLAGS64=--as-flags=--64 -m i386:x86-64
 DTDEFARM32=$(DLLTOOL) $(DLLTOOLFLAGSARM32) $(AM_DLLTOOLFLAGS) --input-def
 DTDEFARM64=$(DLLTOOL) $(DLLTOOLFLAGSARM64) $(AM_DLLTOOLFLAGS) --input-def
 DTDEF32=$(DLLTOOL) $(DLLTOOLFLAGS32) $(AM_DLLTOOLFLAGS) --input-def
 DTDEF64=$(DLLTOOL) $(DLLTOOLFLAGS64) $(AM_DLLTOOLFLAGS) --input-def
+
 if DLLTOOL_HAS_TEMP_PREFIX
   AM_DLLTOOLFLAGS += --temp-prefix $(basename $@)
 endif
@@ -830,11 +835,17 @@ src_libmingwex=\
   stdio/vscanf.c           stdio/vsnprintf.c         stdio/vsnwprintf.c        stdio/vsscanf.c         \
   stdio/vswscanf.c         stdio/vwscanf.c           stdio/wtoll.c            stdio/mingw_asprintf.c    stdio/mingw_vasprintf.c
 
-# Include the default load config struct only for Control Flow Guard support.
+# Include the default load config struct only for Control Flow Guard support or ARM64EC.
+if ARM64EC
+src_libmingwex+=\
+  cfguard/mingw_cfguard_loadcfg.S \
+  misc/mingw_arm64ec_support.S
+else
 if CFGUARD
 src_libmingwex+=\
   cfguard/mingw_cfguard_loadcfg.S
 endif
+endif
 
 # these go into both 32 and 64 bit x86 versions:
 src_libmingwex_x86=\
diff --git a/mingw-w64-crt/configure.ac b/mingw-w64-crt/configure.ac
index 37851f605..9a74cc4da 100644
--- a/mingw-w64-crt/configure.ac
+++ b/mingw-w64-crt/configure.ac
@@ -156,7 +156,7 @@ AC_ARG_ENABLE([libarm64],
     [Build the WinARM64 libraries])],
   [],
   [AS_CASE([$host_cpu],
-    [aarch64*],[enable_libarm64=yes],
+    [aarch64* | arm64*],[enable_libarm64=yes],
     [*],[enable_libarm64=no])
   ])
 AC_MSG_RESULT([$enable_libarm64])
@@ -181,7 +181,7 @@ AS_CASE([$host_cpu],
     libx8632suffx=lib
     libarm64suffx=libarm64
     libarm32suffx=libarm32],
-  [aarch64*],[
+  [aarch64* | arm64*],[
     libx8664suffx=libx8664
     libx8632suffx=libx8632
     libarm64suffx=lib
@@ -210,6 +210,8 @@ AC_SUBST([LIBX8632SUFFIXDIR],[$libx8632suffx])
 AC_SUBST([LIBARM64SUFFIXDIR],[$libarm64suffx])
 AC_SUBST([LIBARM32SUFFIXDIR],[$libarm32suffx])
 
+AM_CONDITIONAL([ARM64EC],[test $host_cpu = arm64ec])
+
 # Checks for features.
 
 AC_MSG_CHECKING([whether to enable globbing])
@@ -379,6 +381,12 @@ AC_MSG_CHECKING([whether the linker provides __ImageBase symbol])
 
 cat <<_ACEOF >conftest.$ac_ext
 extern unsigned char __ImageBase[[]];
+
+#ifdef __arm64ec__
+// Define a dummy call helper to satisfy the linker
+void *__os_arm64x_dispatch_ret;
+#endif
+
 void __main(void) {
 }
 int main(void) {
-- 
2.25.1

