name: Builds
on:
  push:

jobs:
  test-toolchain:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    strategy:
      fail-fast: false
      matrix:
        arch:
          - x86_64
          - i686
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          install: >-
            unzip
            make
      - name: Unpack toolchain
        run: |
          curl -LO https://martin.st/temp/llvm-mingw-${{matrix.arch}}.zip
          unzip -q llvm-mingw-*.zip
          rm llvm-mingw-*.zip
          mv llvm-mingw-* /llvm-mingw
          cp /llvm-mingw/${{matrix.arch}}-w64-mingw32/bin/*.dll /llvm-mingw/bin
          echo /llvm-mingw/bin >> $GITHUB_PATH
      - uses: actions/checkout@v3
      - name: Run tests
        run: |
          mkdir test/local
          cd test/local
          export PATH=/llvm-mingw/bin:$PATH
          make -f ../Makefile -j$(nproc)
          make -f ../Makefile clean
          make -f ../Makefile test -j$(nproc)
          make -f ../Makefile clean
          make -f ../Makefile test -j$(nproc) HAVE_SANITIZERS=1 HAVE_CFGUARD=1 HAVE_OPENMP=1 NATIVE=1
          cd ../..
          ./run-tests.sh /llvm-mingw
          ./run-lldb-tests.sh /llvm-mingw

  # Run llvm-mingw's tests on x86_64 with wine, on Linux.
  test-toolchain-wine:
    runs-on: ubuntu-latest
    steps:
      - name: Install wine
        run: |
          # dpkg --add-architecture i386 to install 32 bit wine fails currently
          sudo apt-get update && sudo apt-get install wine64-development
          wine64 wineboot
      - name: Unpack toolchain
        run: |
          curl -LO https://martin.st/temp/llvm-mingw-linux.tar.xz
          tar -Jxf llvm-mingw-*.tar.xz
          rm llvm-mingw-*.tar.xz
          sudo mv llvm-mingw* /opt/llvm-mingw
          echo /opt/llvm-mingw/bin >> $GITHUB_PATH
      - uses: actions/checkout@v3
      - name: Run tests
        run: |
          RUN_I686=false RUN_X86_64=wine64 ./run-tests.sh /opt/llvm-mingw
