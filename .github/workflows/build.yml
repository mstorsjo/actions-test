name: Builds
on:
  push:

jobs:
  # Run libcxx's tests with the cross-built x86_64 toolchain from above.
  # (This builds its own copy of libcxx, but it should be pretty much
  # identical to the one shipped - and tests that the toolchain works
  # for running the libcxx tests.)
  # This also forces testing the bundled python executables.
  test-libcxx:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          install: >-
            unzip
            git
            make
          pacboy: >-
            cmake:p
            ninja:p
      - name: Unpack toolchain
        run: |
          curl -LO https://github.com/mstorsjo/llvm-mingw/releases/download/20220802/llvm-mingw-20220802-ucrt-x86_64.zip
          unzip -q llvm-mingw-*.zip
          rm llvm-mingw-*.zip
          mv llvm-mingw-* /llvm-mingw
          echo /llvm-mingw/bin >> $GITHUB_PATH
          echo /llvm-mingw/python/bin >> $GITHUB_PATH
          echo "PYTHON_EXE=$(cygpath -m /llvm-mingw/python/bin/python3.exe)" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: Build patched mingw-w64
        run: |
          git config --global user.name "LLVM MinGW"
          git config --global user.email root@localhost
          ARCHS="i686 x86_64" ./build-mingw-w64.sh --skip-include-triplet-prefix /llvm-mingw
      - name: Checkout llvm-project
        run: |
          CHECKOUT_ONLY=1 ./build-llvm.sh
      - name: Build and test libcxx
        run: |
          export PATH=/llvm-mingw/bin:/llvm-mingw/python/bin:$PATH
          cd llvm-project
          mkdir build
          cd build
          cmake ../runtimes \
            -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DPython3_EXECUTABLE="$PYTHON_EXE" \
            -DLIBCXX_ENABLE_WERROR=YES \
            -DLLVM_ENABLE_RUNTIMES="libcxx;libcxxabi;libunwind" \
            -DLIBCXX_CXX_ABI=libcxxabi \
            -DCMAKE_C_COMPILER=clang \
            -DCMAKE_CXX_COMPILER=clang++ \
            -DLIBCXX_TARGET_INFO="libcxx.test.target_info.MingwLocalTI" \
            -DLIBCXXABI_ENABLE_SHARED=NO \
            -DLIBCXX_ENABLE_STATIC_ABI_LIBRARY=YES \
            -DLIBCXX_USE_COMPILER_RT=YES \
            -DLIBCXXABI_USE_COMPILER_RT=YES \
            -DLIBUNWIND_USE_COMPILER_RT=YES \
            -DLIBCXXABI_USE_LLVM_UNWINDER=YES \
            -DLIBCXX_EXTRA_SITE_DEFINES="TEST_IS_EXECUTED_IN_A_SLOW_ENVIRONMENT"
          ninja
          ninja check-cxx
