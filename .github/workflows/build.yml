name: Builds
on:
  push:

jobs:
  test-openmp:
    runs-on: windows-latest
    steps:
      - name: Unpack toolchain
        run: |
          curl -LO https://martin.st/temp/llvm-mingw-${{matrix.arch}}.zip
          Expand-Archive llvm-mingw-*.zip -DestinationPath .
          del llvm-mingw-*.zip
          mv llvm-mingw-* c:\llvm-mingw
          echo "c:\llvm-mingw\bin" | Out-File -FilePath $Env:GITHUB_PATH -Encoding utf8 -Append
          echo "c:\llvm-mingw\python\bin" | Out-File -FilePath $Env:GITHUB_PATH -Encoding utf8 -Append
          echo "PYTHON_EXE=c:/llvm-mingw/python/bin/python3.exe" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
      - uses: actions/checkout@v3
      - name: Checkout llvm-project
        run: |
          bash -c "CHECKOUT_ONLY=1 ./build-llvm.sh"
      - name: Build test executables
        run: |
          cd llvm-project
          mkdir build-tools
          cd build-tools
          cmake ../llvm `
            -G Ninja `
            -DCMAKE_BUILD_TYPE=Release `
            -DLLVM_TARGETS_TO_BUILD=X86 `
            -DCMAKE_C_COMPILER=clang `
            -DCMAKE_CXX_COMPILER=clang++
          ninja not FileCheck
          echo "TOOLS=$PWD\bin" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
      - name: Build and test openmp
        run: |
          cd llvm-project
          mkdir build-openmp
          cd build-openmp
          cmake ../openmp `
            -G Ninja `
            -DCMAKE_BUILD_TYPE=Release `
            -DOPENMP_LLVM_TOOLS_DIR="$Env:TOOLS" `
            -DCMAKE_C_COMPILER=clang `
            -DCMAKE_CXX_COMPILER=clang++ `
            -DCMAKE_ASM_MASM_COMPILER=llvm-ml `
            -DLIBOMP_ASMFLAGS=-m64
          ninja
          ninja check-openmp
