name: GitHub Actions Demo
on: [push]

env:
  BUILD_TYPE: Release

jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Look around
        run: |
          pwd
          echo ${{ github.workspace }}
          ls -l /
          whoami
          df -h
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."

  fdk-aac-automake:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          pwd
          cd fdk-aac
          ./autogen.sh
          ./configure --enable-example
          make -j$(nproc)
      - run: pwd

  fdk-aac-cmake:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} ${{github.workspace}}/fdk-aac -DBUILD_PROGRAMS=YES
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

  fdk-aac-cmake-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} ${{github.workspace}}/fdk-aac -DBUILD_PROGRAMS=YES
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      - uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: |
            build/Release/*.dll
            build/Release/*.exe
          retention-days: 7

  fdk-aac-cmake-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} ${{github.workspace}}/fdk-aac -DBUILD_PROGRAMS=YES
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

  fdk-aac-cmake-msys:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    strategy:
      matrix:
        system: ['mingw32', 'mingw64', 'ucrt64', 'clang64']
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.system}}
          update: true
          install: >-
            git
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-toolchain
      - uses: actions/checkout@v2
      - run: |
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} ${{github.workspace}}/fdk-aac -DBUILD_PROGRAMS=YES
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
